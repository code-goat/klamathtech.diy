
[{"content":" Check out our Docs! # ","date":"May 4, 4040","externalUrl":null,"permalink":"/info/","section":"Docs","summary":"","title":"Docs","type":"info"},{"content":" $ echo drama \u0026gt; /dev/null Technofuedalism # International Support # A highly requested feature, Blowfish is now multilingual! If you publish your content in multiple languages, the site will be built with all the translations available.\n🇬🇧 🇩🇪 🇫🇷 🇪🇸 🇨🇳 🇧🇷 🇹🇷 🇧🇩\rThanks to submissions from the community, Blowfish has already been translated into thirty languages with more to be added over time. By the way, pull requests for new languages are always welcome!\nRTL language support # One of the benefits of the new Tailwind and Multilingual features is the ability to add RTL language support. When enabled, the entire site will reflow content from right-to-left. Every element in the theme has been restyled to ensure it looks great in this mode which aids authors who wish to generate content in RTL languages.\nRTL is controlled on a per-language basis so you can mix and match both RTL and LTR content in your projects and the theme will respond accordingly.\nAutomatic image resizing # A big change in Blowfish 2.0 is the addition of automatic image resizing. Using the power of Hugo Pipes, images in Markdown content are now automatically scaled to different output sizes. These are then presented using HTML srcset attributes enabling optimised file sizes to be served to your site visitors.\n\u0026lt;!-- Markdown: ![My image](image.jpg) --\u0026gt; \u0026lt;img srcset=\u0026#34; /image_320x0_resize_q75_box.jpg 320w, /image_635x0_resize_q75_box.jpg 635w, /image_1024x0_resize_q75_box.jpg 1024w, /image_1270x0_resize_q75_box.jpg 2x\u0026#34; src=\u0026#34;/image_635x0_resize_q75_box.jpg\u0026#34; alt=\u0026#34;My image\u0026#34; /\u0026gt; Best of all there\u0026rsquo;s nothing you need to change! Simply insert standard Markdown image syntax and let the theme do the rest. If you want a little more control, the figure shortcode has been completely rewritten to provide the same resizing benefits.\nSite search # Powered by Fuse.js, site search allows visitors to quickly and easily find your content. All searches are performed client-side meaning there\u0026rsquo;s nothing to configure on the server and queries are performed super fast. Simply enable the feature in your site configuration and you\u0026rsquo;re all set. Oh, and it also supports full keyboard navigation!\nTables of contents # A highly requested feature, Blowfish now supports tables of contents on article pages. You can see it in action on this page. The contents are fully responsive and will adjust to take advantage of the space available at different screen resolutions.\nAvailable on a global or per article basis, the table of contents can be fully customised using standard Hugo configuration values, allowing you to adjust the behaviour to suit your project.\nAccessibility improvements # From adding ARIA descriptions to more items or simply adjusting the contrast of certain text elements, this release is the most accessible yet.\nVersion 2 also introduces \u0026ldquo;skip to content\u0026rdquo; and \u0026ldquo;scroll to top\u0026rdquo; links that enable quick navigation. There\u0026rsquo;s also keyboard shortcuts for enabling items like search without reaching for the mouse.\nThe new image resizing features also provide full control over alt and title elements enabling an accessible experience for all visitors.\nA whole lot more # There\u0026rsquo;s countless other features to explore. From being able to display taxonomies on articles and list pages, to using the new headline author parameter to customise your homepage. There\u0026rsquo;s also improved JSON-LD structured data which further optimises SEO performance.\n","date":"May 4, 4040","externalUrl":null,"permalink":"/projects/","section":"Klamath River Tech Collective","summary":"","title":"Projects","type":"page"},{"content":" Klamath Tech Collective Guides # Privacy 101: # This guide outline the most basic\u0026ndash;but also most effective\u0026ndash;privacy moves you can make as a user. Post 2 # ","date":"Apr 20, 20200","externalUrl":null,"permalink":"/guides/","section":"Guides","summary":"","title":"Guides","type":"guides"},{"content":" This would be a Privacy Guide # You know? # Like this! # ","date":"Apr 20, 20200","externalUrl":null,"permalink":"/guides/privacy101/","section":"Guides","summary":"","title":"Privacy 101","type":"guides"},{"content":" The Predatory Digital Landscape: # Understanding Techno-feudalism and the Quest for Digital Justice # We live in an era marked by rapid technological advancements and a digital environment that is increasingly predatory. This landscape is often described as technofeudalism, a system where tech giants act as modern feudal lords, controlling vast digital territories and extracting value from users through data and algorithmic control. To understand this complex system, let\u0026rsquo;s delve into its core components and explore historical parallels that can guide us toward a more equitable future.\nDefining Technofeudalism / Techno-colonization # Technofeudalism represents a post-capitalist structure where power is concentrated in platform ownership and data extraction rather than traditional capital. This system is characterized by cloud capital, where digital infrastructure serves as the new \u0026ldquo;land\u0026rdquo; monopolized by tech corporations. Instead of generating profits through production, these corporations extract what can be thought of as cloud rent, such as ad revenue and data fees. In this setup, users and workers become digital peasants, reliant on platforms for economic and social participation. The necessity of having a smartphone to fully engage in society underscores this dependency, making it difficult to imagine life without these digital tools.\nIn parallel, technocolonialism emerges as a modern iteration of colonialism, where control over technology infrastructure, data, and digital ecosystems is concentrated in the hands of a few global tech corporations, predominantly based in the Global North. This domination mirrors traditional colonialism, where economic, political, and cultural power was concentrated in the hands of a few nations, to the detriment of others. Technocolonialism involves the exploitation of digital technologies for political, economic, and social domination, often resulting in an unequal division of labor and dependency on digital infrastructure. It further exacerbates the disparities between the Global North and South, as developing countries become reliant on foreign technologies and data extraction systems, reinforcing their subordinate position in the global digital economy. Both technofeudalism and technocolonialism highlight how digital technologies can be used to exert control and influence over populations and resources, often in ways that mirror historical forms of exploitation.\nTechnofuedalism # Historical Context: The Luddite Revolution # An interesting parallel to our current situation is the Luddite Revolution in Western Europe during the early 19th century. Often misunderstood as anti-technology, the Luddites were actually pro-worker rights activists who targeted machinery that undermined their livelihoods. Between 1811 and 1816, they organized raids to destroy textile machinery, not because they opposed technology itself, but because these machines were used to exploit workers by reducing wages and increasing unemployment. The Luddites sought fair wages, safer working conditions, and protection against displacement by machines.\nParallels Between Technofeudalism and Industrial Exploitation # Today, we face a similar challenge. Our smartphones, the internet, browsers, and social media platforms are the modern equivalents of those textile machines. These technologies extract value from us—our data, attention, and labor—often without fair compensation or control over how they are used. Just as the Luddites smashed looms to reclaim their agency, we must find ways to resist the extractive forces of technofeudalism. However, unlike the physical machinery of the past, digital tools are deeply embedded in our daily lives, making traditional forms of resistance impractical.\nModern Resistance: Digital Literacy as Defense # In this digital age, digital literacy becomes our most powerful tool for resistance. It involves understanding how data is extracted, how algorithms work, and how platform monopolies operate. By being aware of these dynamics, we can begin to reclaim our agency. Digital literacy empowers us to use technology in ways that serve us, rather than just serving the interests of tech corporations. This might involve using encryption to protect our data, supporting open-source software, or advocating for policies that promote digital rights and fairness.\nConclusion: Reclaiming Agency in a Technofeudal Era # As we navigate this complex digital landscape, it\u0026rsquo;s crucial to remember that our goal is not to reject technology, but to ensure it serves humanity rather than just profit. Like the Luddites, we must focus on justice—demanding that technology empowers workers and users, not just the corporations that control it. By educating ourselves, advocating for policy reforms, and supporting grassroots tech initiatives, we can dismantle the extractive systems of technofeudalism and build a more equitable digital future. This journey requires collective action and a commitment to using technology as a tool for empowerment, rather than exploitation.\n","externalUrl":null,"permalink":"/info/technofeudalism/","section":"Docs","summary":"","title":"'Technofeudalism \u0026 Technocolonialism' What are they?","type":"info"},{"content":" We are salmon swimming upstream against the currents of technocolonialism # Based across ancestral Karuk, Yurok, and Hoopa territories \u0026ndash; From Happy Camp to Hoopa, from Katamin to Kepel \u0026ndash; we’re building community-owned tech ecosystems where the Klamath meets the keyboard.\nThe Klamath Tech Collective is a bioregional tech collective dedicated to shrinking the tech literacy gap and reclaiming technology as a tool for community resilience, self-determination, and regeneration. Our mission is rooted in the belief that technology should serve the people and the land, not extract from them.\nWhat We Do # Tech Literacy \u0026amp; STEAM Education:\nWe offer free, hands-on workshops and learning circles for all ages, with a focus on STEAM (Science, Technology, Engineering, Arts, Math) content that is place-based and culturally relevant. Our programs center Indigenous knowledge and community co-design, empowering youth and elders alike to become creators-not just consumers-of technology.\nRepurposing \u0026amp; Redistribution:\nWe collect, repair, and repurpose tech hardware, distributing it freely to individuals and for building collective infrastructure. By keeping devices in use and out of landfills, we support local resilience and reduce reliance on extractive supply chains.\nDecolonial Tech \u0026amp; Data Ethics:\nOur approach is grounded in a strong non-extractive, “data back” ethic. We promote equal access, data sovereignty \u0026amp; privacy, and citizen/Indigenous-owned infrastructure. We teach digital defense and privacy skills to help elders and community members protect themselves from scams, corporate/scientific surveillance, and identity theft.\nDIY \u0026amp; FOSS Culture:\nWe embody DIY (Do It Yourself) culture by endorsing personal hardware repair, Free \u0026amp; open-source software (FOSS), and community-driven solutions. Our collective is a hub for building digital autonomy, learning new digital tools and demystifying technologies such as AI by helping our bioregion move beyond hype and toward genuine empowerment.\nCommunity Debunking \u0026amp; Digital Defense:\nWe provide a safe and accessible space for critical conversations around technology, AI, digital rights, and data sovereignty. Our workshops and resources help community members spot misinformation, understand risks, and make informed choices about the tech in their lives.\nOur Values # Bioregional Stewardship:\nWe believe the bioregion is the natural scale for collective action and governance, aligning technology with the needs of our land and people.\nIntergenerational Learning:\nWe foster relationships between youth, elders, and all community members, centering Indigenous ways of knowing and ensuring everyone has a voice in shaping our digital future.\nCollective Power:\nWe work to build local infrastructure and knowledge that liberates our communities from corporate and colonial control, nurturing a new generation of tech stewards and citizen scientists.\nJoin us as we weave together ancestral wisdom and modern tools, forging a path toward digital sovereignty and bioregional resilience-where technology flows with, not against, the river.\nJoin our Mailing List! ","externalUrl":null,"permalink":"/about/","section":"Klamath River Tech Collective","summary":"","title":"About Us","type":"page"},{"content":" Points Of Unity # ","externalUrl":null,"permalink":"/info/points_of_unity/","section":"Docs","summary":"","title":"Points of Unity","type":"info"},{"content":" ","externalUrl":null,"permalink":"/posts/post1/","section":"Posts","summary":"","title":"Post 1","type":"posts"},{"content":" ","externalUrl":null,"permalink":"/posts/post2/","section":"Posts","summary":"","title":"Post 2","type":"posts"},{"content":" The Hacker\u0026rsquo;s Manifesto # by +++The Mentor+++ Originally published in Phrack Issue #7, 1986. Another one got caught today, it\u0026#39;s all over the papers.\r\u0026#34;Teenager arrested in computer crime scandal\u0026#34;\r\u0026#34;Hacker arrested after bank tampering\u0026#34;\rDamn kids. They\u0026#39;re all alike.\rBut did you, in your three-piece psychology and 1950s technobrain, ever take a look behind the eyes of a hacker?\rDid you ever wonder what made him tick, what forces shaped him, what may have molded him?\rI am a hacker, enter my world...\rMine is a world that begins with school...\rI\u0026#39;m smarter than most of the other kids, this crap they teach us bores me...\rDamn underachiever. They\u0026#39;re all alike.\rI\u0026#39;m in junior high or high school. I\u0026#39;ve listened to teachers explain for the fifteenth time\rhow to reduce a fraction. I understand it. \u0026#34;No, Ms. Smith, I didn\u0026#39;t show my work.\rI did it in my head...\u0026#34;\rDamn kid. Probably copied it. They\u0026#39;re all alike.\rI made a discovery today. I found a computer.\rWait a second, this is cool. It does what I want it to do. If it makes a mistake,\rit\u0026#39;s because I screwed it up. Not because it doesn\u0026#39;t like me...\rOr feels threatened by me...\rOr thinks I\u0026#39;m a smart ass...\rOr doesn\u0026#39;t like teaching and shouldn\u0026#39;t be here...\rDamn kid. All he does is play games. They\u0026#39;re all alike.\rAnd then it happened... a door opened to a world... rushing through the phone line like heroin through an addict\u0026#39;s veins,\ran electronic pulse is sent out, a refuge from the day-to-day incompetencies is sought...\ra board is found. \u0026#34;This is it... this is where I belong...\u0026#34;\rI know everyone here... even if I\u0026#39;ve never met them, never talked to them, may never hear from them again...\rI know you all...\rDamn kid. Tying up the phone line again. They\u0026#39;re all alike...\rYou bet your ass we\u0026#39;re all alike... we\u0026#39;ve been spoon-fed baby food at school when we hungered for steak...\rthe bits of meat that you did let slip through were pre-chewed and tasteless. We\u0026#39;ve been dominated by sadists,\ror ignored by the apathetic. The few that had something to teach found us willing pupils, but those few are like drops of water in the desert.\rThis is our world now... the world of the electron and the switch, the beauty of the baud.\rWe make use of a service already existing without paying for what could be dirt cheap if it wasn\u0026#39;t run by profiteering gluttons, and you call us criminals.\r","externalUrl":null,"permalink":"/info/hacker_manifesto/","section":"Docs","summary":"","title":"The Hacker Manifesto","type":"info"},{"content":" What is \u0026ldquo;Data Back\u0026rdquo;? # \u0026ldquo;Data Back\u0026rdquo; is a movement and rallying cry for Indigenous peoples to reclaim authority over their own data, paralleling calls for #LandBack and #CashBack. At its core, \u0026ldquo;Data Back\u0026rdquo; demands that data about Indigenous communities, cultures, languages, and lands-regardless of how or when it was collected-rightfully belongs to those communities and must be governed by them.\nKey Principles # Indigenous Data Sovereignty:\n\u0026ldquo;Data Back\u0026rdquo; is rooted in the principle of Indigenous Data Sovereignty: the right of Indigenous nations to govern the collection, ownership, and application of their own data. This means Indigenous peoples should control how their data is collected, stored, accessed, and used, in alignment with their values and worldviews.\nResponse to Extractive Practices:\nThe movement is a reaction against extractive, colonial systems that have historically commodified and profited from Indigenous knowledge, culture, and information-often without consent or benefit to the communities themselves.\nCultural Revitalization:\nBeyond resistance, \u0026ldquo;Data Back\u0026rdquo; inspires the rejuvenation of Indigenous cultures by supporting the protection and revitalization of language, traditions, and knowledge systems through community-controlled data practices.\nGuiding Ethos # “Nothing about us without us.”\nThis phrase captures the essence of the movement: Indigenous peoples must be at the center of all decisions about their data. Internationally, this is supported by the United Nations Declaration on the Rights of Indigenous Peoples (UNDRIP) Article 31, which affirms the right of Indigenous peoples to maintain, control, protect, and develop their cultural knowledge and data.\nWhy It Matters # Restoring Authority:\n\u0026ldquo;Data Back\u0026rdquo; seeks to reverse centuries of data colonialism by restoring authority to Indigenous communities over their information and representation.\nEthical Data Governance:\nThe movement calls for data governance models that prioritize Indigenous consent, benefit, and stewardship, challenging Western-centric and extractive approaches.\nCommunity Digital Literacy and Data Privacy:\nTeaching digital literacy and data privacy practices is essential to the \u0026ldquo;Data Back\u0026rdquo; movement. By equipping community members with the skills to understand, protect, and manage their own data, we empower Indigenous peoples to safeguard their information, resist digital exploitation, and make informed choices about technology. This education helps ensure that data sovereignty is not just a principle, but a lived reality-enabling communities to actively defend their rights and shape their digital futures.\nIn summary, \u0026ldquo;Data Back\u0026rdquo; is about returning control of data to Indigenous peoples, ensuring it is managed, shared, and used on their terms, for their benefit, and in accordance with their cultural values and rights.\nFind Out More\u0026hellip; # https://animikii.com/insights/databack-recognize-and-reclaim-indigenous-data-sovereignty https://databack.animikii.com/ https://www.idsovandresearcher.com/ https://usindigenousdatanetwork.org/ ","externalUrl":null,"permalink":"/info/data_back/","section":"Docs","summary":"","title":"What is 'Data Back'?","type":"info"},{"content":"","date":"May 4, 4040","externalUrl":null,"permalink":"/tags/about/","section":"Tags","summary":"","title":"About","type":"tags"},{"content":"","date":"May 4, 4040","externalUrl":null,"permalink":"/tags/docs/","section":"Tags","summary":"","title":"Docs","type":"tags"},{"content":"","date":"May 4, 4040","externalUrl":null,"permalink":"/series/documentation/","section":"Series","summary":"","title":"Documentation","type":"series"},{"content":"","date":"May 4, 4040","externalUrl":null,"permalink":"/authors/fern/","section":"Authors","summary":"","title":"Fern","type":"authors"},{"content":"\rAncient Greece: Privacy was valued in ancient Greek culture, with concepts like \"oikonomia\" emphasizing the importance of private life.\r1789: The U.S. Constitution came into effect, providing implicit protections for privacy through its amendments.\r1890: The \"Right to Privacy\" law review article by Louis Brandeis and Samuel Warren argued for a legal right to privacy.\r1914: The Federal Trade Commission (FTC) was established, later becoming a key player in privacy enforcement.\r1970s: The U.S. government began regulating encryption as a munition, restricting its export and use.\r1973: The HEW Advisory Committee on Automated Personal Data Systems developed Fair Information Practices, which influenced modern privacy legislation.\r1974: The Privacy Act of 1974 and FERPA were enacted to protect personal data.\r1975: The draft Data Encryption Standard (DES) was published, marking a significant step in public cryptography.\r1977: DES was adopted as a federal standard, despite concerns about its security.\r1980s: Early malware and viruses began to spread, highlighting cybersecurity concerns.\r1990s: Encryption export controls were gradually relaxed due to lobbying and economic needs.\r1995: The EU Data Protection Directive was adopted, setting a precedent for robust privacy laws.\r1996: HIPAA was enacted to protect health information.\r1998: COPPA was passed to safeguard children's online privacy.\r1999: The Gramm-Leach-Bliley Act required financial institutions to disclose data sharing practices.\r2000: Encryption regulations were significantly relaxed in the U.S.\r2001: AES replaced DES as the encryption standard.\r2010s:\r2012: Target's marketing practices raised privacy concerns.\r2013: Edward Snowden revealed extensive government surveillance, sparking global privacy debates.\r2013: The Target data breach exposed millions of credit card details.\r2014: The Sony Pictures hack highlighted cybersecurity vulnerabilities.\r2015: The Safe Harbor agreement was invalidated, impacting data transfers between the EU and U.S.\r2018: GDPR came into effect, setting new standards for data protection.\r2018: The Facebook-Cambridge Analytica scandal exposed misuse of personal data.\r2020s:\r2020: CCPA took effect in California, mirroring GDPR protections.\r2021: Apple introduced App Tracking Transparency, enhancing user privacy controls.\r2021: Facebook faced criticism over WhatsApp data sharing practices.\r2022: The U.S. government faced challenges in balancing privacy with surveillance needs.\rHistorical Regulation: Encryption was once regulated as a munition, with export restrictions that treated it as a weapon.\rForced Disclosure Laws: Some countries have laws requiring individuals to disclose encryption keys during investigations.\rLegal Debates: Cases like United States v. Fricosu have addressed the legality of compelling individuals to decrypt data.\r","date":"May 4, 4040","externalUrl":null,"permalink":"/info/timeline/","section":"Docs","summary":"","title":"Hacking, a timeline","type":"info"},{"content":"","date":"May 4, 4040","externalUrl":null,"permalink":"/tags/info/","section":"Tags","summary":"","title":"Info","type":"tags"},{"content":"\rRooted in Bioregional Resilience, Wired for Liberation # We are salmon swimming upstream against the currents of technofeudalism. Based across ancestral Karuk, Yurok, and Hupa territories—Happy Camp to Hoopa, Somes Bar to Kepel—we\u0026rsquo;re building community-owned tech ecosystems where the Klamath meets the keyboard.\nOur Currents Flow Through # 🛠️ Bioregional Hacktivism: Free \u0026amp; Open-source collectively built infrastructure, community organized workshops/trainings 📡 Signal Reclamation: Encrypted comms for data sovereignty, and solar-powered mesh networks on mountain tops ♻️ E-Waste Revival: \u0026ldquo;Mend \u0026amp; Defend\u0026rdquo; hardware clinics turning old smartphones and forgotten laptops into functional and useful community tools 🌱 STEAM from the Ground Up: Youth-led projects! We Resist By # Teaching our community members to skills to protect themselves digitally Returning technology to it\u0026rsquo;s rightful place: as a tool for us, rather than us as it\u0026rsquo;s tool Coding for bioregional and cultural resilience Owning our means of Media production Rejecting AI overlords in favor of ancestral intelligence networks Our Toolshed Includes: # Feminist server stacks running on microhydro power # $ wget community-accountability Salmon-safe cryptography # Mycorrhizal learning networks # Join Us! # We gather where:\n📻 Airwaves carry both music and SSH keys 💻 Old Cellphones become GPS mesh units for basket materials mapping 🌲 Understorys wifi meshes better than Starlink\u0026rsquo;s cold gaze Find us:\n🌉 \u0026hellip;Coding automation metrics for our smokehouses ⛰️ Debugging environmental models in the high country\u0026hellip; 🌊 3D Printing hunting and fishing gear for our families ","date":"May 4, 4040","externalUrl":null,"permalink":"/","section":"Klamath River Tech Collective","summary":"","title":"Klamath River Tech Collective","type":"page"},{"content":"","date":"May 4, 4040","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"May 4, 4040","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"Apr 20, 20200","externalUrl":null,"permalink":"/authors/collective/","section":"Authors","summary":"","title":"Collective","type":"authors"},{"content":"","date":"Apr 20, 20200","externalUrl":null,"permalink":"/tags/guides/","section":"Tags","summary":"","title":"Guides","type":"tags"},{"content":"","date":"Apr 20, 20200","externalUrl":null,"permalink":"/series/guides/","section":"Series","summary":"","title":"Guides","type":"series"},{"content":"","date":"Oct 4, 4040","externalUrl":null,"permalink":"/tags/blowfish/","section":"Tags","summary":"","title":"Blowfish","type":"tags"},{"content":"","date":"Oct 4, 4040","externalUrl":null,"permalink":"/categories/blowfish/","section":"Categories","summary":"","title":"Blowfish","type":"categories"},{"content":"Just one year ago, I createdBlowfish, a Hugo theme crafted to build my unique vision for my personal homepage. I also decided to make it an open-source project. Fast-forward to today, and Blowfish has transformed into a thriving open-source project with over 600 stars on GitHub and a user base of hundreds. In this tutorial, I’ll show you how to get started and have your website running in a couple of minutes.\nnunocoracao/blowfish Personal Website \u0026amp; Blog Theme for Hugo HTML 1927 510 TL;DR # The goal of this guide is to walk a newcomer to Hugo on how to install, manage, and publish your own website. The final version of the code is available in this repo - for those that would like to jump to the end.\nThe visual style is just one of the many possibilities available in Blowfish. Users are encouraged to check the documentation page and learn how to customize the theme to their needs. Additionally, there are already great examples of the theme from other users available for inspiration. Blowfish also offers several extra features in the form of shortcodes available out of the box in the theme - check them out here and get inspired.\nSetup your environment # Let’s begin by installing all the tools you need. This guide will cover the steps for Mac so these instructions might not apply to your hardware and OS. If you are on Windows or Linux, please consult the guides on how to install Hugo, and GitHub’s CLI for your OS.\nAnyway, if you are using MacOS let’s install brew - a package manager for mac - as that will help installing and managing the other tools.\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; Once brew is installed let’s install Git, Hugo and GitHub’s CLI.\nbrew install git brew install hugo brew install gh Create a folder for your code and open a terminal session into it (I chose blowfish-tutorial in the commands below, feel free to call the folder whatever you want).\nmkdir blowfish-tutorial cd blowfish-tutorial Once inside the folder, the next step is to initialize your local git repo.\ngit init -b main Now, let’s create and sync the local repo to a GitHub repo so that your code is stored remotely.\ngh auth login gh repo create git push --set-upstream origin main Check the image below for the options I selected for this guide, again feel free to change names and description to your use-case.\nFinally, create a .gitignore file which allows you to exclude certain files from your repo automatically. I would start with something like the example below.\n#others node_modules .hugo_build.lock # OS generated files .DS_Store .DS_Store? ._* .Spotlight-V100 .Trashes # Hugo public The last step is to save all the changes to the repo.\ngit add . git commit -m “initial commit” git push Create site and configure it # With all the tools ready, creating and configuring your site will be easy. Still within the folder you created in the last section, let’s create an empty Hugo website (with no theme).\nhugo new site --force . Once the scaffolding finishes, try the command below to run your page. Open a browser on https://localhost:1313 to see your site…\nhugo server Ups… Page not found – right? This was expected, even though you created a website, Hugo doesn’t give any default experience – aka your site doesn’t have any page to show.\nNext step, let\u0026rsquo;s install Blowfish using git submodules which will make it easier to manage and upgrade to new versions in the future.\ngit submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish Next, create the following folder structure at the root of your code directory - config/_default/. Now you will need to download these files and place them in _default folder you just created. The final structure should look something like this.\nconfig/_default/ ├─ config.toml ├─ languages.en.toml ├─ markup.toml ├─ menus.en.toml └─ params.toml ` Open the config.toml and uncomment the line theme = \u0026ldquo;blowfish” and you are ready to go. Try the running the site again and check the result at https://localhost:1313\nhugo server You should see something like the image below. Not much yet as we didn’t add any content, but the main skeleton for Blowfish is already in place - just requires configuration.\nNow let’s configure the theme.\nFYI This guide will not cover in detail what each parameter available in Blowfish does – for everything available and how to use it, check Blowfish documentation for every option in every file. menus.en.toml # This file defines your menu structure, for the top banner and the footer. For this guide, let’s create two menu sections: one for Posts and one for Tags.\nPosts - will display the full list of entries Tags - automatically generated based on tags placed on each article To achieve this, make sure the following entries exist in the menus.en.toml file. Once the changes are done, you should see the menus appearing by re-running hugo server.\n[[main]] name = \u0026#34;Posts\u0026#34; pageRef = \u0026#34;posts\u0026#34; weight = 10 [[main]] name = \u0026#34;Tags\u0026#34; pageRef = \u0026#34;tags\u0026#34; weight = 30 languages.en.toml # This file will configure your main details as the author of the website. Change the section below to reflect your details.\n[author] name = \u0026#34;Your name here\u0026#34; image = \u0026#34;profile.jpg\u0026#34; headline = \u0026#34;I\u0026#39;m only human\u0026#34; bio = \u0026#34;A little bit about you\u0026#34; # appears in author card for each article The images for the website should be placed in the assets folder. For this step, please add a profile picture to that folder named profile.jpg or change the configuration above to the filename you chose. If you don’t have a profile image available, you can use the one below for the tutorial.\nassets/profile.jpg The last step is configuring your links – social media, GitHub, etc. The file includes all the supported options, but they are commented. You are welcome to uncomment everything and delete the ones you would rather not use. Replace the right links on the ones you decided to keep. You can also change the order.\nparams.toml # This is the main configuration file for Blowfish. Most of the visual options or customization available can be configured using it, and it covers several areas of the theme. For this tutorial, I decided to use a background layout - check other layouts for Blowfish’s landing page - with the Neon color scheme - you can pick a different color scheme if you want to - check this list or create your own.\nAdd an image.jpg to the assets folder which will be the background for the site. You can also download the examples I am using in this tutorial.\nassets/image.jpg Now let’s jump into the params.toml and start configuring the file. I will focus only on the values that need to be changed, don’t delete the rest of the file without reading the docs. Let’s begin by making sure that we have the right color scheme, that image optimization is on, and configure the default background image.\ncolorScheme = \u0026#34;neon\u0026#34; disableImageOptimization = false defaultBackgroundImage = \u0026#34;image.jpg\u0026#34; # used as default for background images Next, let\u0026rsquo;s configure our homepage. We’re going with the background layout, configuring the homepage image and recent items. Furthermore, we are using the card view for items in the recent category. Finally, let’s configure the header to be fixed.\n[homepage] layout = \u0026#34;background\u0026#34; # valid options: page, profile, hero, card, background, custom homepageImage = \u0026#34;image.jpg\u0026#34; # used in: hero, and card showRecent = true showRecentItems = 6 showMoreLink = true showMoreLinkDest = \u0026#34;/posts/\u0026#34; cardView = true cardViewScreenWidth = false layoutBackgroundBlur = true # only used when layout equals background [header] layout = \u0026#34;fixed\u0026#34; Now configure how the article and list pages will look. Here are the configurations for those.\n[article] showHero = true heroStyle = \u0026#34;background\u0026#34; showSummary = true showTableOfContents = true showRelatedContent = true relatedContentLimit = 3 [list] showCards = true groupByYear = false cardView = true If you run hugo server again, you should see something like the image below.\nAdding content to your site # Create a folder to place your posts in /content/posts. This was also the directory configured in your menu to list all the articles. Within that folder, let’s create a new directory and give it the name myfirstpost. Within it create an index.md file – your article and place a featured.jpg or .png for in the same directory as the thumbnail for the article. Use the example below to get started. The first lines in the file are the Front Matter, which tell Hugo what the look and experience of the article will be – different themes support different params for this. Check the docs for more info.\n--- title: \u0026#34;My first post\u0026#34; date: 2023-08-14 draft: false summary: \u0026#34;This is my first post on my site\u0026#34; tags: [\u0026#34;space\u0026#34;] --- ## A sub-title Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nibh nisl, vulputate eu lacus vitae, maximus molestie libero. Vestibulum laoreet, odio et sollicitudin sollicitudin, quam ligula tempus urna, sed sagittis eros eros ac felis. In tristique tortor vitae lacinia commodo. Mauris venenatis ultrices purus nec fermentum. Nunc sit amet aliquet metus. Morbi nisl felis, gravida ac consequat vitae, blandit eu libero. Curabitur porta est in dui elementum porttitor. Maecenas fermentum, tortor ac feugiat fringilla, orci sem sagittis massa, a congue risus ipsum vel massa. Aliquam sit amet nunc vulputate, facilisis neque in, faucibus nisl. You can create additional articles to see what your site will look like once there is content in it. Your site should look like the images below. The main page shows the recent articles, each article is connected through others automatically via related section, you have tag aggregation, and full-text search.\nShip it # The only thing missing is to ship your site. I will be using Firebase for hosting - it’s a free alternative and provides more advanced features if you are creating something more complex. Go to firebase and create a new project. Once that is done, let’s switch to the CLI as it will make it easier to configure everything.\nLet’s install firebase’s CLI - if not on Mac check install instructions on Firebase.\nbrew install firebase Now log in and init firebase hosting for the project.\nfirebase login firebase init Select hosting and proceed.\nFollow the image below for the options I recommend. Make sure to set up the workflow files for GitHub actions. These will guarantee that your code will be deployed once there is a change to the repo.\nHowever, those files will not work out-of-box, as Hugo requires extra steps for the build to work. Please copy and paste the code blocks below to the respective files within the .github folder, but keep the original projectId in the files generated by firebase.\nfirebase-hosting-merge.yml # # This file was auto-generated by the Firebase CLI # https://github.com/firebase/firebase-tools name: Deploy to Firebase Hosting on merge \u0026#39;on\u0026#39;: push: branches: - main jobs: build_and_deploy: runs-on: ubuntu-latest steps: - name: Hugo setup uses: peaceiris/actions-hugo@v2.6.0 env: ACTIONS_ALLOW_UNSECURE_COMMANDS: \u0026#39;true\u0026#39; - name: Check out code into the Go module directory uses: actions/checkout@v4 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: hugo -E -F --minify -d public - name: Deploy Production uses: FirebaseExtended/action-hosting-deploy@v0 with: repoToken: \u0026#39;${{ secrets.GITHUB_TOKEN }}\u0026#39; firebaseServiceAccount: \u0026#39;${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOWFISH_TUTORIAL }}\u0026#39; channelId: live projectId: blowfish-tutorial firebase-hosting-pull-request.yml # # This file was auto-generated by the Firebase CLI # https://github.com/firebase/firebase-tools name: Deploy to Firebase Hosting on PR \u0026#39;on\u0026#39;: pull_request jobs: build_and_preview: if: \u0026#39;${{ github.event.pull_request.head.repo.full_name == github.repository }}\u0026#39; runs-on: ubuntu-latest steps: - name: Hugo setup uses: peaceiris/actions-hugo@v2.6.0 env: ACTIONS_ALLOW_UNSECURE_COMMANDS: \u0026#39;true\u0026#39; - name: Check out code into the Go module directory uses: actions/checkout@v4 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: hugo -E -F --minify -d public - name: Deploy preview uses: FirebaseExtended/action-hosting-deploy@v0 with: repoToken: \u0026#39;${{ secrets.GITHUB_TOKEN }}\u0026#39; firebaseServiceAccount: \u0026#39;${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOWFISH_TUTORIAL }}\u0026#39; expires: 30d channelId: preview-${{ github.event.number }} projectId: blowfish-tutorial The last step is committing your code to GitHub and let the workflows you created take care of deploying your site. Since we configured GitHub actions, this will trigger a job that will configure and deploy your site automatically.\ngit add . git commit -m \u0026#34;add github actions workflows\u0026#34; git push If the actions tab for your repo, you should see something like this.\nOnce all the steps finish, your Firebase console should show something like the image below - including the links to see your app – I got a version of this tutorial running on https://blowfish-tutorial.web.app/.\nConclusion and Next Steps # Now you have your first version of your homepage. You can make changes locally and once you commit your code they will automatically be reflected online. What shall you do next? I’ll leave you with some useful links to get you inspired and learn more about Blowfish and Hugo.\nhttps://blowfish.page/docs/ https://blowfish.page/docs/configuration/ https://blowfish.page/docs/shortcodes/ https://blowfish.page/examples/ https://blowfish.page/users/ https://gohugo.io/documentation/ ","date":"Oct 4, 4040","externalUrl":"https://n9o.xyz/posts/202310-blowfish-tutorial/","permalink":"/guides/full_template/","section":"Guides","summary":"Just one year ago, I created Blowfish, a Hugo theme crafted to build my unique vision for my personal homepage. I also decided to make it an open-source project. Fast-forward to today, and Blowfish has transformed into a thriving open-source project with over 600 stars on GitHub and a user base of hundreds. In this tutorial, I’ll show you how to get started and have your website running in a couple of minutes.","title":"Build your homepage using Blowfish and Hugo","type":"guides"},{"content":"","date":"Oct 4, 4040","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"Oct 4, 4040","externalUrl":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo","type":"tags"},{"content":"","date":"Oct 4, 4040","externalUrl":null,"permalink":"/authors/nunocoracao/","section":"Authors","summary":"","title":"Nunocoracao","type":"authors"},{"content":"","date":"Oct 4, 4040","externalUrl":null,"permalink":"/categories/open-source/","section":"Categories","summary":"","title":"Open-Source","type":"categories"},{"content":"","date":"Oct 4, 4040","externalUrl":null,"permalink":"/tags/tutorial/","section":"Tags","summary":"","title":"Tutorial","type":"tags"},{"content":"These are our contributing authors:\nKlamath Tech Collective # fern # ","externalUrl":null,"permalink":"/authors/","section":"Klamath River Tech Collective","summary":"","title":"Authors","type":"page"},{"content":"","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":" # ","externalUrl":null,"permalink":"/stuff/","section":"Stuff we like!","summary":"","title":"Stuff we like!","type":"stuff"}]